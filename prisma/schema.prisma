generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["multiSchema"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  schemas  = ["ems", "er", "public"]
}

/// 
/// er schema
///
model er_Hospital {
  hospital_id       String                 @id @db.VarChar(255)
  hospital_name     String                 @db.VarChar(50)
  hospital_address  String                 @db.VarChar(255)
  hospital_type     er_MedicalFacilityType
  hospital_phone    String?                 @db.VarChar(20)
  hospital_city     String                 @db.VarChar(50)
  hospital_district String                 @db.VarChar(50)
  latitude          Float?
  longitude         Float?

  ///
  /// default 
  created_at DateTime @default(now())
  updated_at DateTime @default(now()) @updatedAt
  status     Status   @default(ACTIVE)

  /// relation
  emergency_center           er_EmergencyCenter[]
  employees                  er_Employee[]
  hospital_departments       er_HospitalDepartment[]
  hospital_medical_equipment er_HospitalMedicalEquipment[]
  hospital_servere_illness   er_HospitalServereIllness[]

  @@map("hospital")
  @@schema("er")
}

model er_Employee {
  employee_id   String          @id @default(uuid())
  employee_name String          @db.VarChar(50)
  hospital_id   String          @db.VarChar(255)
  id_card       String          @db.VarChar(20)
  password      String          @db.VarChar(255)
  role          er_EmployeeRole

  /// default 
  created_at DateTime @default(now())
  updated_at DateTime @default(now()) @updatedAt
  status     Status   @default(ACTIVE)

  /// relation
  hospital er_Hospital @relation(fields: [hospital_id], references: [hospital_id])

  @@unique([id_card, hospital_id])
  @@map("employee")
  @@schema("er")
}

model er_Department {
  department_id        Int    @id @default(autoincrement())
  department_name      String @db.VarChar(50)
  parent_department_id Int?

  /// default 
  created_at DateTime @default(now())
  updated_at DateTime @default(now()) @updatedAt
  status     Status   @default(ACTIVE)

  /// relation
  parent_department    er_Department?          @relation("DepartmentToSubDepartment", fields: [parent_department_id], references: [department_id])
  sub_departments      er_Department[]         @relation("DepartmentToSubDepartment")
  hospital_departments er_HospitalDepartment[]

  @@map("department")
  @@schema("er")
}

model er_HospitalDepartment {
  hospital_id   String @db.VarChar(255)
  department_id Int

  /// default 
  created_at DateTime @default(now())
  updated_at DateTime @default(now()) @updatedAt
  status     Status   @default(ACTIVE)

  /// relation
  department er_Department @relation(fields: [department_id], references: [department_id])
  hospital   er_Hospital   @relation(fields: [hospital_id], references: [hospital_id])

  @@id([hospital_id, department_id])
  @@map("hospital_department")
  @@schema("er")
}

model er_EmergencyCenter {
  emergency_center_id              String                    @id @db.VarChar(50)
  hospital_id                      String                    @db.VarChar(255)
  emergency_center_type_code       String                    @db.VarChar(50)
  emergency_center_type            er_MedicalInstitutionType
  emergency_center_name            String                    @db.VarChar(50)
  emergency_center_address         String                    @db.VarChar(255)
  emergency_center_primary_phone   String                    @db.VarChar(20)
  emergency_center_secondary_phone String?                   @db.VarChar(20)
  emergency_center_latitude        Float
  emergency_center_longitude       Float

  /// default 
  created_at DateTime @default(now())
  updated_at DateTime @default(now()) @updatedAt
  status     Status   @default(ACTIVE)

  /// relation
  hospital        er_Hospital        @relation(fields: [hospital_id], references: [hospital_id])
  emergency_rooms er_EmergencyRoom[]

  @@map("emergency_center")
  @@schema("er")
}

model er_EmergencyRoom {
  emergency_room_id   String               @id @db.VarChar(50)
  emergency_center_id String               @db.VarChar(50)
  emergency_room_type er_EmergencyRoomType
  emergency_room_name String               @db.VarChar(50)

  /// default 
  created_at DateTime @default(now())
  updated_at DateTime @default(now()) @updatedAt
  status     Status   @default(ACTIVE)

  /// relation
  emergency_center    er_EmergencyCenter   @relation(fields: [emergency_center_id], references: [emergency_center_id])
  emergency_room_beds er_EmergencyRoomBed[]

  @@map("emergency_room")
  @@schema("er")
}

model er_EmergencyRoomBed {
  emergency_room_id         String                    @db.VarChar(50)
  emergency_room_bed_num    Int
  emergency_room_bed_status er_EmergencyRoomBedStatus @default(AVAILABLE)

  /// default 
  created_at DateTime @default(now())
  updated_at DateTime @default(now()) @updatedAt
  status     Status   @default(ACTIVE)

  /// relation
  emergency_room          er_EmergencyRoom         @relation(fields: [emergency_room_id], references: [emergency_room_id])
  emergency_room_bed_logs er_EmergencyRoomBedLog[]

  @@id([emergency_room_id, emergency_room_bed_num])
  @@map("emergency_room_bed")
  @@schema("er")
}

model er_EmergencyRoomBedLog {
  emergency_room_id         String                    @db.VarChar(50)
  emergency_room_bed_num    Int
  emergency_room_bed_status er_EmergencyRoomBedStatus
  log_date                  DateTime                  @default(now())
  patient_id                String

  /// default 
  created_at DateTime @default(now())
  updated_at DateTime @default(now()) @updatedAt
  status     Status   @default(ACTIVE)

  /// relation
  emergency_room_bed er_EmergencyRoomBed @relation(fields: [emergency_room_id, emergency_room_bed_num], references: [emergency_room_id, emergency_room_bed_num])
  patient            er_Patient         @relation(fields: [patient_id], references: [patient_id])

  @@id([emergency_room_id, emergency_room_bed_num, log_date])
  @@map("emergency_room_bed_log")
  @@schema("er")
}

model er_Patient {
  patient_id      String @id @default(uuid())
  patient_name    String @db.VarChar(50)
  patient_birth   String @db.VarChar(50)
  patient_phone   String @db.VarChar(50)
  patient_address String @db.VarChar(50)

  /// default 
  created_at DateTime @default(now())
  updated_at DateTime @default(now()) @updatedAt
  status     Status   @default(ACTIVE)

  /// relation
  emergency_room_bed_logs er_EmergencyRoomBedLog[]
  patient_logs            er_PatientLog[]

  @@map("patient")
  @@schema("er")
}

model er_PatientLog {
  patient_id String   @db.VarChar(50)
  log_date   DateTime @default(now())
  log_type   String   @db.VarChar(50)
  log_desc   String   @db.VarChar(255)

  /// default 
  created_at DateTime @default(now())
  updated_at DateTime @default(now()) @updatedAt
  status     Status   @default(ACTIVE)

  /// relation
  patient er_Patient @relation(fields: [patient_id], references: [patient_id])

  @@id([patient_id, log_date])
  @@map("patient_log")
  @@schema("er")
}

model er_ServereIllness {
  servere_illness_id   String @id @default(uuid()) @db.VarChar(50)
  servere_illness_name String @db.VarChar(50)

  /// default 
  created_at DateTime @default(now())
  updated_at DateTime @default(now()) @updatedAt
  status     Status   @default(ACTIVE)

  /// relation
  hospital_servere_illness er_HospitalServereIllness[]

  @@map("servere_illness")
  @@schema("er")
}

model er_HospitalServereIllness {
  hospital_id        String @db.VarChar(255)
  servere_illness_id String @db.VarChar(50)

  /// default 
  created_at DateTime @default(now())
  updated_at DateTime @default(now()) @updatedAt
  status     Status   @default(ACTIVE)

  /// relation
  hospital        er_Hospital        @relation(fields: [hospital_id], references: [hospital_id])
  servere_illness er_ServereIllness @relation(fields: [servere_illness_id], references: [servere_illness_id])

  @@id([hospital_id, servere_illness_id])
  @@map("hospital_servere_illness")
  @@schema("er")
}

model er_MedicalEquipment {
  medical_equipment_id   Int    @id
  medical_equipment_name String @db.VarChar(50)

  /// default 
  created_at DateTime @default(now())
  updated_at DateTime @default(now()) @updatedAt
  status     Status   @default(ACTIVE)

  /// relation
  hospital_medical_equipment er_HospitalMedicalEquipment[]

  @@map("medical_equipment")
  @@schema("er")
}

model er_HospitalMedicalEquipment {
  hospital_id             String @db.VarChar(255)
  medical_equipment_id    Int
  medical_equipment_count Int

  /// default 
  created_at DateTime @default(now())
  updated_at DateTime @default(now()) @updatedAt
  status     Status   @default(ACTIVE)

  /// relation
  hospital          er_Hospital         @relation(fields: [hospital_id], references: [hospital_id])
  medical_equipment er_MedicalEquipment @relation(fields: [medical_equipment_id], references: [medical_equipment_id])

  @@id([hospital_id, medical_equipment_id])
  @@map("hospital_medical_equipment")
  @@schema("er")
}

model ems_Patient {
  patient_id  String @id @default(uuid())
  hospital_id String @db.VarChar(255)

  /// default 
  created_at DateTime @default(now())
  updated_at DateTime @default(now()) @updatedAt
  status     Status   @default(ACTIVE)

  /// relation

  @@map("patient")
  @@schema("ems")
}

enum er_EmployeeRole {
  ADMIN
  DOCTOR
  NURSE
  RECEPTIONIST

  @@schema("er")
}

enum er_EmergencyRoomType {
  GENERAL
  COHORT_ISOLATION
  NEGATIVE_PRESSURE_ISOLATION
  STANDARD_ISOLATION
  PEDIATRIC
  PEDIATRIC_NEGATIVE_PRESSURE_ISOLATION
  PEDIATRIC_STANDARD_ISOLATION

  @@schema("er")
}

enum er_EmergencyRoomBedStatus {
  AVAILABLE
  OCCUPIED
  CLEANING
  MAINTENANCE

  @@schema("er")
}

enum er_MedicalFacilityType {
  HOSPITAL
  HEALTH_CENTER
  HEALTH_MEDICAL_CENTER
  HEALTH_SUB_CENTER
  HEALTH_CLINIC
  ADVANCED_GENERAL
  NURSING_HOSPITAL
  CLINIC
  MENTAL_HOSPITAL
  MATERNITY_CLINIC
  GENERAL_HOSPITAL
  DENTAL_HOSPITAL
  DENTAL_CLINIC
  ORIENTAL_HOSPITAL
  ORIENTAL_CLINIC

  @@schema("er")
}

enum er_MedicalInstitutionType {
  NON_EMERGENCY_MEDICAL_INSTITUTION
  LOCAL_EMERGENCY_MEDICAL_INSTITUTION
  LOCAL_EMERGENCY_MEDICAL_CENTER
  REGIONAL_EMERGENCY_MEDICAL_CENTER

  @@schema("er")
}

enum Status {
  ACTIVE
  INACTIVE
  DELETED

  @@schema("public")
}
