import { HttpStatus } from '@nestjs/common';
import { ERROR } from '.';

export namespace EMS_EMPLOYEE_ERROR {
  export type EMPLOYEE_MULTIPLE_ALREADY_EXIST = ERROR<'EMPLOYEE_MULTIPLE_ALREADY_EXIST', HttpStatus.BAD_REQUEST>;
  export type EMPLOYEE_NOT_FOUND = ERROR<'EMPLOYEE_NOT_FOUND', HttpStatus.NOT_FOUND>;
  export type EMPLOYEE_PASSWORD_SAME = ERROR<'EMPLOYEE_PASSWORD_SAME', HttpStatus.BAD_REQUEST>;
  export type EMPLOYEE_PASSWORD_INVALID = ERROR<'EMPLOYEE_PASSWORD_INVALID', HttpStatus.BAD_REQUEST>;
}

export namespace EMS_AMBULANCE_COMPANY_ERROR {
  export type AMBULANCE_COMPANY_NOT_FOUND = ERROR<'AMBULANCE_COMPANY_NOT_FOUND', HttpStatus.NOT_FOUND>;
}

export namespace EMS_AMBULANCE_ERROR {
  export type AMBULANCE_NOT_FOUND = ERROR<'AMBULANCE_NOT_FOUND', HttpStatus.NOT_FOUND>;
  export type EMPLOYEE_NOT_FOUND = ERROR<'EMPLOYEE_NOT_FOUND', HttpStatus.NOT_FOUND>;
  export type UNAUTHORIZED_EMPLOYEE_ACCESS = ERROR<'UNAUTHORIZED_EMPLOYEE_ACCESS', HttpStatus.FORBIDDEN>;
  export type EMPLOYEE_ALREADY_ASSIGNED = ERROR<'EMPLOYEE_ALREADY_ASSIGNED', HttpStatus.BAD_REQUEST>;
  export type EMPLOYEE_NOT_ASSIGNED = ERROR<'EMPLOYEE_NOT_ASSIGNED', HttpStatus.BAD_REQUEST>;
}

export namespace EMS_PATIENT_ERROR {
  export type INCHARGED_PATIENT_ALREADY_EXIST = ERROR<'INCHARGED_PATIENT_ALREADY_EXIST', HttpStatus.BAD_REQUEST>;
  export type PATIENT_NOT_FOUND = ERROR<'PATIENT_NOT_FOUND', HttpStatus.NOT_FOUND>;
  export type FORBIDDEN = ERROR<'FORBIDDEN', HttpStatus.FORBIDDEN>;
  export type PATIENT_NOT_ACCEPTED = ERROR<'PATIENT_NOT_ACCEPTED', HttpStatus.BAD_REQUEST>;
  export type PATIENT_COMPLETE_ALREADY = ERROR<'PATIENT_COMPLETE_ALREADY', HttpStatus.BAD_REQUEST>;
  export type PATIENT_CANCEL_ALREADY = ERROR<'PATIENT_CANCEL_ALREADY', HttpStatus.BAD_REQUEST>;
  export type PATIENT_CANCEL_NOT_ALLOWED = ERROR<'PATIENT_CANCEL_NOT_ALLOWED', HttpStatus.BAD_REQUEST>;
}
